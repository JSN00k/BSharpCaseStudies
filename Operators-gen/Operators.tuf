<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.theory.core.theoryRoot org.eventb.core.configuration="org.eventb.theory.core.thy">
<org.eventb.theory.core.importTheoryProject name="'" org.eventb.theory.core.importTheoryProject="/Relations-gen">
<org.eventb.theory.core.importTheory name="'" org.eventb.theory.core.importTheory="/Relations-gen/Relations.dtf|org.eventb.theory.core.deployedTheoryRoot#Relations"/>
</org.eventb.theory.core.importTheoryProject>
<org.eventb.theory.core.newOperatorDefinition name="(" org.eventb.core.label="baseOp_T" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="ℙ(T1_EvB)" org.eventb.core.identifier="T1"/>
<org.eventb.theory.core.operatorArgument name="(" org.eventb.core.expression="Setoid_T(T1)" org.eventb.core.identifier="T"/>
<org.eventb.theory.core.directOperatorDefinition name=")" org.eventb.theory.core.formula="{ bOp ∣ bOp ∈ T1 × T1 → T1 ∧ (∀x, y, z·x ∈ T1 ∧ y ∈ T1 ∧ z ∈ T1 ⇒ ((Setoid_equ(T1, T)(x ↦ y)= TRUE) ⇒ ((Setoid_equ(T1, T)(bOp(x ↦ z) ↦ bOp(y ↦ z))= TRUE) ∧ (Setoid_equ(T1, T)(bOp(z ↦ x) ↦ bOp(z ↦ y))= TRUE))))}"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.typeParameter name=")" org.eventb.core.identifier="T1_EvB"/>
<org.eventb.theory.core.theorem name="*" org.eventb.core.label="BaseOpTheorem:" org.eventb.core.predicate="∀T1, T, bOp·T1 ∈ ℙ(T1_EvB) ∧ T ∈ Setoid_T(T1) ∧ bOp ∈ baseOp_T(T1, T) ⇒ (∀a, b, x, y·a ∈ T1 ∧ b ∈ T1 ∧ x ∈ T1 ∧ y ∈ T1 ⇒ (((Setoid_equ(T1, T)(a ↦ b)= TRUE) ∧ (Setoid_equ(T1, T)(x ↦ y)= TRUE)) ⇒ (Setoid_equ(T1, T)(bOp(a ↦ x) ↦ bOp(b ↦ y))= TRUE)))"/>
<org.eventb.theory.core.newOperatorDefinition name="+" org.eventb.core.label="AssocOp_T" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="ℙ(T1_EvB)" org.eventb.core.identifier="T1"/>
<org.eventb.theory.core.operatorArgument name="(" org.eventb.core.expression="Setoid_T(T1)" org.eventb.core.identifier="T"/>
<org.eventb.theory.core.directOperatorDefinition name=")" org.eventb.theory.core.formula="{ aOp ∣ aOp ∈ baseOp_T(prj1(T), T) ∧ (∀x, y, z·x ∈ T1 ∧ y ∈ T1 ∧ z ∈ T1 ⇒ Setoid_equ(T1, T)(aOp(x ↦ aOp(y ↦ z)) ↦ aOp(aOp(x ↦ y) ↦ z))= TRUE)}"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.newOperatorDefinition name="," org.eventb.core.label="CommOp_T" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="ℙ(T1_EvB)" org.eventb.core.identifier="T1"/>
<org.eventb.theory.core.operatorArgument name="(" org.eventb.core.expression="Setoid_T(T1)" org.eventb.core.identifier="T"/>
<org.eventb.theory.core.directOperatorDefinition name=")" org.eventb.theory.core.formula="{ cOp ∣ cOp ∈ baseOp_T(prj1(T), T) ∧ (∀x, y·x ∈ T1 ∧ y ∈ T1 ⇒ Setoid_equ(T1, T)(cOp(x ↦ y) ↦ cOp(y ↦ x))= TRUE)}"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.newOperatorDefinition name="-" org.eventb.core.label="AssocCommOp_T" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="ℙ(T1_EvB)" org.eventb.core.identifier="T1"/>
<org.eventb.theory.core.operatorArgument name="(" org.eventb.core.expression="Setoid_T(T1)" org.eventb.core.identifier="T"/>
<org.eventb.theory.core.directOperatorDefinition name=")" org.eventb.theory.core.formula="{ Op ∣ Op ∈ AssocOp_T(prj1(T), T) ∩ CommOp_T(prj1(T), T)}"/>
</org.eventb.theory.core.newOperatorDefinition>
</org.eventb.theory.core.theoryRoot>
