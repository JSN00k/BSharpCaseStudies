<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.theory.core.theoryRoot org.eventb.core.configuration="org.eventb.theory.core.thy">
<org.eventb.theory.core.importTheoryProject name="'" org.eventb.theory.core.importTheoryProject="/Monoids-gen">
<org.eventb.theory.core.importTheory name="'" org.eventb.theory.core.importTheory="/Monoids-gen/Monoid.dtf|org.eventb.theory.core.deployedTheoryRoot#Monoid"/>
</org.eventb.theory.core.importTheoryProject>
<org.eventb.theory.core.newOperatorDefinition name="(" org.eventb.core.label="Group" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="ℙ(T_EvB)" org.eventb.core.identifier="T"/>
<org.eventb.theory.core.directOperatorDefinition name="(" org.eventb.theory.core.formula="{ G ∣ G ∈ Monoid(T) ∧ (∀x·x ∈ T ⇒ (∃y·y ∈ T ∧ (((Monoid_op(T, G)(x ↦ y) ↦ Monoid_ident(T, G))∈Monoid_equ(T, G)) ∧ ((Monoid_op(T, G)(y ↦ x) ↦ Monoid_ident(T, G))∈Monoid_equ(T, G)))))}"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.typeParameter name=")" org.eventb.core.identifier="T_EvB"/>
<org.eventb.theory.core.newOperatorDefinition name="*" org.eventb.core.label="Group_equ" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="ℙ(T_EvB)" org.eventb.core.identifier="T"/>
<org.eventb.theory.core.operatorArgument name="(" org.eventb.core.expression="Group(T)" org.eventb.core.identifier="G"/>
<org.eventb.theory.core.directOperatorDefinition name=")" org.eventb.theory.core.formula="prj2(prj1(prj1(G)))"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.newOperatorDefinition name="+" org.eventb.core.label="Group_op" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="ℙ(T_EvB)" org.eventb.core.identifier="T"/>
<org.eventb.theory.core.operatorArgument name="(" org.eventb.core.expression="Group(T)" org.eventb.core.identifier="G"/>
<org.eventb.theory.core.directOperatorDefinition name=")" org.eventb.theory.core.formula="prj2(prj1(G))"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.newOperatorDefinition name="," org.eventb.core.label="Group_ident" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="ℙ(T_EvB)" org.eventb.core.identifier="T"/>
<org.eventb.theory.core.operatorArgument name="(" org.eventb.core.expression="Group(T)" org.eventb.core.identifier="G"/>
<org.eventb.theory.core.directOperatorDefinition name=")" org.eventb.theory.core.formula="prj2(G)"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.theorem name="-" org.eventb.core.label="Inv unique:" org.eventb.core.predicate="∀T, equ, op, ident·T ∈ ℙ(T_EvB) ∧ T ↦ equ ↦ op ↦ ident ∈ Group(T) ⇒ (∀a, b, c·a ∈ T ∧ b ∈ T ∧ c ∈ T ⇒ (((op(a ↦ b) ↦ ident)∈equ) ⇒ ((op(b ↦ a) ↦ ident)∈equ)))"/>
<org.eventb.theory.core.theorem name="." org.eventb.core.label="Op Inverse:" org.eventb.core.predicate="∀T, equ, op, ident·T ∈ ℙ(T_EvB) ∧ T ↦ equ ↦ op ↦ ident ∈ Group(T) ⇒ (∀a, b, x, y·a ∈ T ∧ b ∈ T ∧ x ∈ T ∧ y ∈ T ⇒ ((((op(a ↦ x) ↦ ident)∈equ) ∧ ((op(b ↦ y) ↦ ident)∈equ)) ⇔ ((op(op(a ↦ b) ↦ op(y ↦ x)) ↦ ident)∈equ)))"/>
<org.eventb.theory.core.theorem name="/" org.eventb.core.label="Cancellation Law:" org.eventb.core.predicate="∀T, equ, op, ident·T ∈ ℙ(T_EvB) ∧ T ↦ equ ↦ op ↦ ident ∈ Group(T) ⇒ (∀a, b, c·a ∈ T ∧ b ∈ T ∧ c ∈ T ⇒ (((op(a ↦ c) ↦ op(b ↦ c))∈equ) ⇔ ((a ↦ b)∈equ)))"/>
<org.eventb.theory.core.theorem name="0" org.eventb.core.label="a squared equ a implies a equ ident:" org.eventb.core.predicate="∀T, equ, op, ident·T ∈ ℙ(T_EvB) ∧ T ↦ equ ↦ op ↦ ident ∈ Group(T) ⇒ (∀a·a ∈ T ⇒ (((op(a ↦ a) ↦ a)∈equ) ⇒ ((a ↦ ident)∈equ)))"/>
<org.eventb.theory.core.theorem name="1" org.eventb.core.label="Inverse Func:" org.eventb.core.predicate="∀T, equ, op, ident·T ∈ ℙ(T_EvB) ∧ T ↦ equ ↦ op ↦ ident ∈ Group(T) ⇒ (∃inv·inv ∈ T → T ∧ (∀x·x ∈ T ⇒ (op(inv(x) ↦ x) ↦ ident)∈equ))"/>
</org.eventb.theory.core.theoryRoot>
