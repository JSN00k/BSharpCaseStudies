<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.theory.core.theoryRoot org.eventb.core.configuration="org.eventb.theory.core.thy">
<org.eventb.theory.core.importTheoryProject name="'" org.eventb.theory.core.importTheoryProject="/Relations-gen">
<org.eventb.theory.core.importTheory name="'" org.eventb.theory.core.importTheory="/Relations-gen/Relations.dtf|org.eventb.theory.core.deployedTheoryRoot#Relations"/>
</org.eventb.theory.core.importTheoryProject>
<org.eventb.theory.core.datatypeDefinition name="(" org.eventb.core.identifier="pNat">
<org.eventb.theory.core.datatypeConstructor name="'" org.eventb.core.identifier="zero"/>
<org.eventb.theory.core.datatypeConstructor name="(" org.eventb.core.identifier="suc">
<org.eventb.theory.core.constructorArgument name="'" org.eventb.core.identifier="prev" org.eventb.theory.core.type="pNat"/>
</org.eventb.theory.core.datatypeConstructor>
</org.eventb.theory.core.datatypeDefinition>
<org.eventb.theory.core.newOperatorDefinition name=")" org.eventb.core.label="pNat_add" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="INFIX">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="pNat" org.eventb.core.identifier="x"/>
<org.eventb.theory.core.operatorArgument name="(" org.eventb.core.expression="pNat" org.eventb.core.identifier="y"/>
<org.eventb.theory.core.recursiveOperatorDefinition name=")" org.eventb.theory.core.inductiveArgument="x">
<org.eventb.theory.core.recursiveDefinitionCase name="'" org.eventb.core.expression="zero" org.eventb.theory.core.formula="y"/>
<org.eventb.theory.core.recursiveDefinitionCase name="(" org.eventb.core.expression="suc(xs)" org.eventb.theory.core.formula="suc((xs) pNat_add (y))"/>
</org.eventb.theory.core.recursiveOperatorDefinition>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.newOperatorDefinition name="*" org.eventb.core.label="pNat_add_P" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.directOperatorDefinition name="'" org.eventb.theory.core.formula="λx ↦ y·x ∈ pNat ∧ y ∈ pNat ∣ x pNat_add y"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.theorem name="+" org.eventb.core.label="TypingTheorem add" org.eventb.core.predicate="∀x, y·x ∈ pNat ∧ y ∈ pNat ⇒ (x pNat_add y ∈ (pNat))"/>
<org.eventb.theory.core.newOperatorDefinition name="," org.eventb.core.label="pNat_add2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="pNat" org.eventb.core.identifier="x"/>
<org.eventb.theory.core.directOperatorDefinition name="(" org.eventb.theory.core.formula="suc(suc(x))"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.newOperatorDefinition name="-" org.eventb.core.label="pNat_add2_P" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.directOperatorDefinition name="'" org.eventb.theory.core.formula="λx·x ∈ pNat ∣ pNat_add2(x)"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.theorem name="." org.eventb.core.label="TypingTheorem add2" org.eventb.core.predicate="∀x·x ∈ pNat ⇒ (pNat_add2(x) ∈ (pNat))"/>
<org.eventb.theory.core.theorem name="/" org.eventb.core.label="pNat_Setoid in Setoid" org.eventb.core.predicate="pNat ↦ { x ↦ y ∣ x = y} ∈ Setoid(pNat)"/>
<org.eventb.theory.core.theorem name="0" org.eventb.core.label="suc out of addition:" org.eventb.core.predicate="∀x, y·x ∈ pNat ∧ y ∈ pNat ⇒ ((x) pNat_add (suc(y)) = (suc((x) pNat_add (y))))"/>
<org.eventb.theory.core.theorem name="1" org.eventb.core.label="add zero:" org.eventb.core.predicate="∀x·x ∈ pNat ⇒ ((x) pNat_add (zero) = (x))"/>
</org.eventb.theory.core.theoryRoot>
