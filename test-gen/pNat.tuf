<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.theory.core.theoryRoot org.eventb.core.configuration="org.eventb.theory.core.thy">
<org.eventb.theory.core.importTheoryProject name="'" org.eventb.theory.core.importTheoryProject="/test-gen">
<org.eventb.theory.core.importTheory name="'" org.eventb.theory.core.importTheory="/test-gen/pNat0.dtf|org.eventb.theory.core.deployedTheoryRoot#pNat0"/>
<org.eventb.theory.core.importTheory name="(" org.eventb.theory.core.importTheory="/test-gen/Monoid.dtf|org.eventb.theory.core.deployedTheoryRoot#Monoid"/>
</org.eventb.theory.core.importTheoryProject>
<org.eventb.theory.core.theorem name="(" org.eventb.core.label="addMon in Monoid" org.eventb.core.predicate="pNat ↦ (λx ↦ y·⊤ ∣ bool(x = y)) ↦ pNat_add_P ↦ zero ∈ Monoid_T(pNat)"/>
<org.eventb.theory.core.newOperatorDefinition name=")" org.eventb.core.label="addMon_raiseToL" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="pNat" org.eventb.core.identifier="x"/>
<org.eventb.theory.core.operatorArgument name="(" org.eventb.core.expression="pNat" org.eventb.core.identifier="p"/>
<org.eventb.theory.core.recursiveOperatorDefinition name=")" org.eventb.theory.core.inductiveArgument="p">
<org.eventb.theory.core.recursiveDefinitionCase name="'" org.eventb.core.expression="zero" org.eventb.theory.core.formula="zero"/>
<org.eventb.theory.core.recursiveDefinitionCase name="(" org.eventb.core.expression="suc(ps)" org.eventb.theory.core.formula="pNat_add_P(x ↦ addMon_raiseToL(x, ps))"/>
</org.eventb.theory.core.recursiveOperatorDefinition>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.newOperatorDefinition name="*" org.eventb.core.label="addMon_raiseToL_P" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.directOperatorDefinition name="'" org.eventb.theory.core.formula="λx ↦ p·x ∈ pNat ∧ p ∈ pNat ∣ addMon_raiseToL(x, p)"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.newOperatorDefinition name="+" org.eventb.core.label="addMon_raiseToR" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="pNat" org.eventb.core.identifier="x"/>
<org.eventb.theory.core.operatorArgument name="(" org.eventb.core.expression="pNat" org.eventb.core.identifier="p"/>
<org.eventb.theory.core.recursiveOperatorDefinition name=")" org.eventb.theory.core.inductiveArgument="p">
<org.eventb.theory.core.recursiveDefinitionCase name="'" org.eventb.core.expression="zero" org.eventb.theory.core.formula="zero"/>
<org.eventb.theory.core.recursiveDefinitionCase name="(" org.eventb.core.expression="suc(ps)" org.eventb.theory.core.formula="pNat_add_P(addMon_raiseToR(x, ps) ↦ x)"/>
</org.eventb.theory.core.recursiveOperatorDefinition>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.newOperatorDefinition name="," org.eventb.core.label="addMon_raiseToR_P" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.directOperatorDefinition name="'" org.eventb.theory.core.formula="λx ↦ p·x ∈ pNat ∧ p ∈ pNat ∣ addMon_raiseToR(x, p)"/>
</org.eventb.theory.core.newOperatorDefinition>
</org.eventb.theory.core.theoryRoot>
