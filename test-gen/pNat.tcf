<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.theory.core.scTheoryRoot org.eventb.core.accurate="true" org.eventb.core.configuration="org.eventb.theory.core.thy" org.eventb.core.source="/test-gen/pNat.tuf">
<org.eventb.theory.core.scImportTheoryProject name="'" org.eventb.core.source="/test-gen/pNat.tuf|org.eventb.theory.core.theoryRoot#pNat|org.eventb.theory.core.importTheoryProject#'" org.eventb.theory.core.importTheoryProject="/test-gen">
<org.eventb.theory.core.scImportTheory name="'" org.eventb.core.source="/test-gen/pNat.tuf|org.eventb.theory.core.theoryRoot#pNat|org.eventb.theory.core.importTheoryProject#'|org.eventb.theory.core.importTheory#'" org.eventb.theory.core.importTheory="/test-gen/pNat0.dtf|org.eventb.theory.core.deployedTheoryRoot#pNat0"/>
<org.eventb.theory.core.scImportTheory name="(" org.eventb.core.source="/test-gen/pNat.tuf|org.eventb.theory.core.theoryRoot#pNat|org.eventb.theory.core.importTheoryProject#'|org.eventb.theory.core.importTheory#(" org.eventb.theory.core.importTheory="/test-gen/Monoid.dtf|org.eventb.theory.core.deployedTheoryRoot#Monoid"/>
</org.eventb.theory.core.scImportTheoryProject>
<org.eventb.theory.core.scNewOperatorDefinition name="(" org.eventb.core.label="addMon_raiseToL" org.eventb.core.predicate="⊤" org.eventb.core.source="/test-gen/pNat.tuf|org.eventb.theory.core.theoryRoot#pNat|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="pNat" org.eventb.theory.core.wd="⊤">
<org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/test-gen/pNat.tuf|org.eventb.theory.core.theoryRoot#pNat|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scOperatorArgument name="p" org.eventb.core.source="/test-gen/pNat.tuf|org.eventb.theory.core.theoryRoot#pNat|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/test-gen/pNat.tuf|org.eventb.theory.core.theoryRoot#pNat|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="p">
<org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="zero ⦂ pNat" org.eventb.core.source="/test-gen/pNat.tuf|org.eventb.theory.core.theoryRoot#pNat|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="zero ⦂ pNat"/>
<org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="suc(ps)" org.eventb.core.source="/test-gen/pNat.tuf|org.eventb.theory.core.theoryRoot#pNat|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="(pNat_add_P ⦂ ℙ(pNat×pNat×pNat))(x ↦ addMon_raiseToL(x,ps))"/>
</org.eventb.theory.core.scRecursiveOperatorDefinition>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name=")" org.eventb.core.label="addMon_raiseToL_P" org.eventb.core.predicate="⊤" org.eventb.core.source="/test-gen/pNat.tuf|org.eventb.theory.core.theoryRoot#pNat|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(pNat×pNat×pNat)" org.eventb.theory.core.wd="∀x⦂pNat,p⦂pNat·(x∈(pNat ⦂ ℙ(pNat))∧p∈(pNat ⦂ ℙ(pNat)))∨¬x∈(pNat ⦂ ℙ(pNat))∨¬p∈(pNat ⦂ ℙ(pNat))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/test-gen/pNat.tuf|org.eventb.theory.core.theoryRoot#pNat|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="λx⦂pNat ↦ p⦂pNat·x∈(pNat ⦂ ℙ(pNat))∧p∈(pNat ⦂ ℙ(pNat)) ∣ addMon_raiseToL(x,p)"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="*" org.eventb.core.label="addMon_raiseToR" org.eventb.core.predicate="⊤" org.eventb.core.source="/test-gen/pNat.tuf|org.eventb.theory.core.theoryRoot#pNat|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="pNat" org.eventb.theory.core.wd="⊤">
<org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/test-gen/pNat.tuf|org.eventb.theory.core.theoryRoot#pNat|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scOperatorArgument name="p" org.eventb.core.source="/test-gen/pNat.tuf|org.eventb.theory.core.theoryRoot#pNat|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/test-gen/pNat.tuf|org.eventb.theory.core.theoryRoot#pNat|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="p">
<org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="zero ⦂ pNat" org.eventb.core.source="/test-gen/pNat.tuf|org.eventb.theory.core.theoryRoot#pNat|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="zero ⦂ pNat"/>
<org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="suc(ps)" org.eventb.core.source="/test-gen/pNat.tuf|org.eventb.theory.core.theoryRoot#pNat|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="(pNat_add_P ⦂ ℙ(pNat×pNat×pNat))(addMon_raiseToR(x,ps) ↦ x)"/>
</org.eventb.theory.core.scRecursiveOperatorDefinition>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="+" org.eventb.core.label="addMon_raiseToR_P" org.eventb.core.predicate="⊤" org.eventb.core.source="/test-gen/pNat.tuf|org.eventb.theory.core.theoryRoot#pNat|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(pNat×pNat×pNat)" org.eventb.theory.core.wd="∀x⦂pNat,p⦂pNat·(x∈(pNat ⦂ ℙ(pNat))∧p∈(pNat ⦂ ℙ(pNat)))∨¬x∈(pNat ⦂ ℙ(pNat))∨¬p∈(pNat ⦂ ℙ(pNat))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/test-gen/pNat.tuf|org.eventb.theory.core.theoryRoot#pNat|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="λx⦂pNat ↦ p⦂pNat·x∈(pNat ⦂ ℙ(pNat))∧p∈(pNat ⦂ ℙ(pNat)) ∣ addMon_raiseToR(x,p)"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scProofRulesBlock name="generatedBlock" org.eventb.core.source="/test-gen/pNat.tuf|org.eventb.theory.core.theoryRoot#pNat|org.eventb.theory.core.newOperatorDefinition#)">
<org.eventb.theory.core.scMetavariable name="x" org.eventb.core.source="/test-gen/pNat.tuf|org.eventb.theory.core.theoryRoot#pNat|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scMetavariable name="p" org.eventb.core.source="/test-gen/pNat.tuf|org.eventb.theory.core.theoryRoot#pNat|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scRewriteRule name="pNat.addMon_raiseToL case 0" org.eventb.core.accurate="true" org.eventb.core.label="pNat.addMon_raiseToL case 0" org.eventb.core.source="/test-gen/pNat.tuf|org.eventb.theory.core.theoryRoot#pNat|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="addMon_raiseToL expansion" org.eventb.theory.core.formula="addMon_raiseToL(x,zero ⦂ pNat)">
<org.eventb.theory.core.scRewriteRuleRHS name="addMon_raiseToL rhs" org.eventb.core.label="addMon_raiseToL rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/test-gen/pNat.tuf|org.eventb.theory.core.theoryRoot#pNat|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.formula="zero ⦂ pNat"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="pNat.addMon_raiseToL case 1" org.eventb.core.accurate="true" org.eventb.core.label="pNat.addMon_raiseToL case 1" org.eventb.core.source="/test-gen/pNat.tuf|org.eventb.theory.core.theoryRoot#pNat|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="addMon_raiseToL expansion" org.eventb.theory.core.formula="addMon_raiseToL(x,suc(ps))">
<org.eventb.theory.core.scRewriteRuleRHS name="addMon_raiseToL rhs" org.eventb.core.label="addMon_raiseToL rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/test-gen/pNat.tuf|org.eventb.theory.core.theoryRoot#pNat|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.formula="(pNat_add_P ⦂ ℙ(pNat×pNat×pNat))(x ↦ addMon_raiseToL(x,ps))"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scMetavariable name="ps" org.eventb.core.source="/test-gen/pNat.tuf|org.eventb.theory.core.theoryRoot#pNat|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scRewriteRule name="pNat.addMon_raiseToL_P" org.eventb.core.accurate="true" org.eventb.core.label="pNat.addMon_raiseToL_P" org.eventb.core.source="/test-gen/pNat.tuf|org.eventb.theory.core.theoryRoot#pNat|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="addMon_raiseToL_P expansion" org.eventb.theory.core.formula="addMon_raiseToL_P ⦂ ℙ(pNat×pNat×pNat)">
<org.eventb.theory.core.scRewriteRuleRHS name="addMon_raiseToL_P rhs" org.eventb.core.label="addMon_raiseToL_P rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/test-gen/pNat.tuf|org.eventb.theory.core.theoryRoot#pNat|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.formula="λx⦂pNat ↦ p⦂pNat·x∈(pNat ⦂ ℙ(pNat))∧p∈(pNat ⦂ ℙ(pNat)) ∣ addMon_raiseToL(x,p)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="pNat.addMon_raiseToR case 0" org.eventb.core.accurate="true" org.eventb.core.label="pNat.addMon_raiseToR case 0" org.eventb.core.source="/test-gen/pNat.tuf|org.eventb.theory.core.theoryRoot#pNat|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="addMon_raiseToR expansion" org.eventb.theory.core.formula="addMon_raiseToR(x,zero ⦂ pNat)">
<org.eventb.theory.core.scRewriteRuleRHS name="addMon_raiseToR rhs" org.eventb.core.label="addMon_raiseToR rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/test-gen/pNat.tuf|org.eventb.theory.core.theoryRoot#pNat|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.formula="zero ⦂ pNat"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="pNat.addMon_raiseToR case 1" org.eventb.core.accurate="true" org.eventb.core.label="pNat.addMon_raiseToR case 1" org.eventb.core.source="/test-gen/pNat.tuf|org.eventb.theory.core.theoryRoot#pNat|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="addMon_raiseToR expansion" org.eventb.theory.core.formula="addMon_raiseToR(x,suc(ps))">
<org.eventb.theory.core.scRewriteRuleRHS name="addMon_raiseToR rhs" org.eventb.core.label="addMon_raiseToR rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/test-gen/pNat.tuf|org.eventb.theory.core.theoryRoot#pNat|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.formula="(pNat_add_P ⦂ ℙ(pNat×pNat×pNat))(addMon_raiseToR(x,ps) ↦ x)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="pNat.addMon_raiseToR_P" org.eventb.core.accurate="true" org.eventb.core.label="pNat.addMon_raiseToR_P" org.eventb.core.source="/test-gen/pNat.tuf|org.eventb.theory.core.theoryRoot#pNat|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="addMon_raiseToR_P expansion" org.eventb.theory.core.formula="addMon_raiseToR_P ⦂ ℙ(pNat×pNat×pNat)">
<org.eventb.theory.core.scRewriteRuleRHS name="addMon_raiseToR_P rhs" org.eventb.core.label="addMon_raiseToR_P rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/test-gen/pNat.tuf|org.eventb.theory.core.theoryRoot#pNat|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.formula="λx⦂pNat ↦ p⦂pNat·x∈(pNat ⦂ ℙ(pNat))∧p∈(pNat ⦂ ℙ(pNat)) ∣ addMon_raiseToR(x,p)"/>
</org.eventb.theory.core.scRewriteRule>
</org.eventb.theory.core.scProofRulesBlock>
<org.eventb.theory.core.scTheorem name="generatedBlocl" org.eventb.core.label="addMon in Monoid" org.eventb.core.predicate="(pNat ⦂ ℙ(pNat)) ↦ (λx⦂pNat ↦ y⦂pNat·⊤ ∣ bool(x=y)) ↦ (pNat_add_P ⦂ ℙ(pNat×pNat×pNat)) ↦ (zero ⦂ pNat)∈Monoid_T(pNat ⦂ ℙ(pNat))" org.eventb.core.source="/test-gen/pNat.tuf|org.eventb.theory.core.theoryRoot#pNat|org.eventb.theory.core.theorem#(" org.eventb.theory.core.order="0"/>
</org.eventb.theory.core.scTheoryRoot>
