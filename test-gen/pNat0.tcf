<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.theory.core.scTheoryRoot org.eventb.core.accurate="true" org.eventb.core.configuration="org.eventb.theory.core.thy" org.eventb.core.source="/test-gen/pNat0.tuf">
<org.eventb.theory.core.scDatatypeDefinition name="pNat" org.eventb.core.source="/test-gen/pNat0.tuf|org.eventb.theory.core.theoryRoot#pNat0|org.eventb.theory.core.datatypeDefinition#'" org.eventb.theory.core.hasError="false">
<org.eventb.theory.core.scDatatypeConstructor name="zero" org.eventb.core.source="/test-gen/pNat0.tuf|org.eventb.theory.core.theoryRoot#pNat0|org.eventb.theory.core.datatypeDefinition#'|org.eventb.theory.core.datatypeConstructor#'"/>
<org.eventb.theory.core.scDatatypeConstructor name="suc" org.eventb.core.source="/test-gen/pNat0.tuf|org.eventb.theory.core.theoryRoot#pNat0|org.eventb.theory.core.datatypeDefinition#'|org.eventb.theory.core.datatypeConstructor#(">
<org.eventb.theory.core.scConstructorArgument name="prev" org.eventb.core.source="/test-gen/pNat0.tuf|org.eventb.theory.core.theoryRoot#pNat0|org.eventb.theory.core.datatypeDefinition#'|org.eventb.theory.core.datatypeConstructor#(|org.eventb.theory.core.constructorArgument#'" org.eventb.core.type="pNat"/>
</org.eventb.theory.core.scDatatypeConstructor>
</org.eventb.theory.core.scDatatypeDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="pNau" org.eventb.core.label="add" org.eventb.core.predicate="⊤" org.eventb.core.source="/test-gen/pNat0.tuf|org.eventb.theory.core.theoryRoot#pNat0|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="pNat" org.eventb.theory.core.wd="⊤">
<org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/test-gen/pNat0.tuf|org.eventb.theory.core.theoryRoot#pNat0|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scOperatorArgument name="y" org.eventb.core.source="/test-gen/pNat0.tuf|org.eventb.theory.core.theoryRoot#pNat0|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/test-gen/pNat0.tuf|org.eventb.theory.core.theoryRoot#pNat0|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="x">
<org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="zero ⦂ pNat" org.eventb.core.source="/test-gen/pNat0.tuf|org.eventb.theory.core.theoryRoot#pNat0|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="y"/>
<org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="suc(xs)" org.eventb.core.source="/test-gen/pNat0.tuf|org.eventb.theory.core.theoryRoot#pNat0|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="suc(xs add y)"/>
</org.eventb.theory.core.scRecursiveOperatorDefinition>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="pNav" org.eventb.core.label="add_P" org.eventb.core.predicate="⊤" org.eventb.core.source="/test-gen/pNat0.tuf|org.eventb.theory.core.theoryRoot#pNat0|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(pNat×pNat×pNat)" org.eventb.theory.core.wd="∀x⦂pNat,y⦂pNat·(x∈(pNat ⦂ ℙ(pNat))∧y∈(pNat ⦂ ℙ(pNat)))∨¬x∈(pNat ⦂ ℙ(pNat))∨¬y∈(pNat ⦂ ℙ(pNat))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/test-gen/pNat0.tuf|org.eventb.theory.core.theoryRoot#pNat0|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="λx⦂pNat ↦ y⦂pNat·x∈(pNat ⦂ ℙ(pNat))∧y∈(pNat ⦂ ℙ(pNat)) ∣ x add y"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="pNaw" org.eventb.core.label="times" org.eventb.core.predicate="⊤" org.eventb.core.source="/test-gen/pNat0.tuf|org.eventb.theory.core.theoryRoot#pNat0|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="pNat" org.eventb.theory.core.wd="⊤">
<org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/test-gen/pNat0.tuf|org.eventb.theory.core.theoryRoot#pNat0|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scOperatorArgument name="y" org.eventb.core.source="/test-gen/pNat0.tuf|org.eventb.theory.core.theoryRoot#pNat0|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/test-gen/pNat0.tuf|org.eventb.theory.core.theoryRoot#pNat0|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="y"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="pNax" org.eventb.core.label="times_P" org.eventb.core.predicate="⊤" org.eventb.core.source="/test-gen/pNat0.tuf|org.eventb.theory.core.theoryRoot#pNat0|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(pNat×pNat×pNat)" org.eventb.theory.core.wd="∀x⦂pNat,y⦂pNat·(x∈(pNat ⦂ ℙ(pNat))∧y∈(pNat ⦂ ℙ(pNat)))∨¬x∈(pNat ⦂ ℙ(pNat))∨¬y∈(pNat ⦂ ℙ(pNat))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/test-gen/pNat0.tuf|org.eventb.theory.core.theoryRoot#pNat0|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="λx⦂pNat ↦ y⦂pNat·x∈(pNat ⦂ ℙ(pNat))∧y∈(pNat ⦂ ℙ(pNat)) ∣ x times y"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scProofRulesBlock name="generatedBlock" org.eventb.core.source="/test-gen/pNat0.tuf|org.eventb.theory.core.theoryRoot#pNat0|org.eventb.theory.core.newOperatorDefinition#(">
<org.eventb.theory.core.scMetavariable name="x" org.eventb.core.source="/test-gen/pNat0.tuf|org.eventb.theory.core.theoryRoot#pNat0|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scMetavariable name="y" org.eventb.core.source="/test-gen/pNat0.tuf|org.eventb.theory.core.theoryRoot#pNat0|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scRewriteRule name="pNat0.add case 0" org.eventb.core.accurate="true" org.eventb.core.label="pNat0.add case 0" org.eventb.core.source="/test-gen/pNat0.tuf|org.eventb.theory.core.theoryRoot#pNat0|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="add expansion" org.eventb.theory.core.formula="(zero ⦂ pNat) add y">
<org.eventb.theory.core.scRewriteRuleRHS name="add rhs" org.eventb.core.label="add rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/test-gen/pNat0.tuf|org.eventb.theory.core.theoryRoot#pNat0|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.formula="y"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="pNat0.add case 1" org.eventb.core.accurate="true" org.eventb.core.label="pNat0.add case 1" org.eventb.core.source="/test-gen/pNat0.tuf|org.eventb.theory.core.theoryRoot#pNat0|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="add expansion" org.eventb.theory.core.formula="suc(xs) add y">
<org.eventb.theory.core.scRewriteRuleRHS name="add rhs" org.eventb.core.label="add rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/test-gen/pNat0.tuf|org.eventb.theory.core.theoryRoot#pNat0|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.formula="suc(xs add y)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scMetavariable name="xs" org.eventb.core.source="/test-gen/pNat0.tuf|org.eventb.theory.core.theoryRoot#pNat0|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scRewriteRule name="pNat0.add_P" org.eventb.core.accurate="true" org.eventb.core.label="pNat0.add_P" org.eventb.core.source="/test-gen/pNat0.tuf|org.eventb.theory.core.theoryRoot#pNat0|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="add_P expansion" org.eventb.theory.core.formula="add_P ⦂ ℙ(pNat×pNat×pNat)">
<org.eventb.theory.core.scRewriteRuleRHS name="add_P rhs" org.eventb.core.label="add_P rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/test-gen/pNat0.tuf|org.eventb.theory.core.theoryRoot#pNat0|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.formula="λx⦂pNat ↦ y⦂pNat·x∈(pNat ⦂ ℙ(pNat))∧y∈(pNat ⦂ ℙ(pNat)) ∣ x add y"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="pNat0.times" org.eventb.core.accurate="true" org.eventb.core.label="pNat0.times" org.eventb.core.source="/test-gen/pNat0.tuf|org.eventb.theory.core.theoryRoot#pNat0|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="times expansion" org.eventb.theory.core.formula="x times y">
<org.eventb.theory.core.scRewriteRuleRHS name="times rhs" org.eventb.core.label="times rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/test-gen/pNat0.tuf|org.eventb.theory.core.theoryRoot#pNat0|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.formula="y"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="pNat0.times_P" org.eventb.core.accurate="true" org.eventb.core.label="pNat0.times_P" org.eventb.core.source="/test-gen/pNat0.tuf|org.eventb.theory.core.theoryRoot#pNat0|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="times_P expansion" org.eventb.theory.core.formula="times_P ⦂ ℙ(pNat×pNat×pNat)">
<org.eventb.theory.core.scRewriteRuleRHS name="times_P rhs" org.eventb.core.label="times_P rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/test-gen/pNat0.tuf|org.eventb.theory.core.theoryRoot#pNat0|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.formula="λx⦂pNat ↦ y⦂pNat·x∈(pNat ⦂ ℙ(pNat))∧y∈(pNat ⦂ ℙ(pNat)) ∣ x times y"/>
</org.eventb.theory.core.scRewriteRule>
</org.eventb.theory.core.scProofRulesBlock>
</org.eventb.theory.core.scTheoryRoot>
