<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.theory.core.scTheoryRoot org.eventb.core.accurate="true" org.eventb.core.configuration="org.eventb.theory.core.thy" org.eventb.core.source="/List-gen/List.tuf">
<org.eventb.theory.core.scTypeParameter name="T" org.eventb.core.source="/List-gen/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.typeParameter#(" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDatatypeDefinition name="List" org.eventb.core.source="/List-gen/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.datatypeDefinition#'" org.eventb.theory.core.hasError="false">
<org.eventb.theory.core.scTypeArgument name="T" org.eventb.core.source="/List-gen/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.datatypeDefinition#'|org.eventb.theory.core.typeArgument#'" org.eventb.theory.core.givenType="T"/>
<org.eventb.theory.core.scDatatypeConstructor name="nil" org.eventb.core.source="/List-gen/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.datatypeDefinition#'|org.eventb.theory.core.datatypeConstructor#("/>
<org.eventb.theory.core.scDatatypeConstructor name="cons" org.eventb.core.source="/List-gen/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.datatypeDefinition#'|org.eventb.theory.core.datatypeConstructor#)">
<org.eventb.theory.core.scConstructorArgument name="head" org.eventb.core.source="/List-gen/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.datatypeDefinition#'|org.eventb.theory.core.datatypeConstructor#)|org.eventb.theory.core.constructorArgument#'" org.eventb.core.type="T"/>
<org.eventb.theory.core.scConstructorArgument name="tail" org.eventb.core.source="/List-gen/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.datatypeDefinition#'|org.eventb.theory.core.datatypeConstructor#)|org.eventb.theory.core.constructorArgument#(" org.eventb.core.type="List"/>
</org.eventb.theory.core.scDatatypeConstructor>
</org.eventb.theory.core.scDatatypeDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="Lisu" org.eventb.core.label="List_last" org.eventb.core.predicate="⊤" org.eventb.core.source="/List-gen/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="List(T)" org.eventb.theory.core.wd="⊤">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/List-gen/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="List(T)"/>
<org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/List-gen/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="a">
<org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="nil ⦂ List(T)" org.eventb.core.source="/List-gen/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="a"/>
<org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="cons(e,t)" org.eventb.core.source="/List-gen/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="COND(t=(nil ⦂ List(T)),cons(e,nil ⦂ List(T)),List_last(t))"/>
</org.eventb.theory.core.scRecursiveOperatorDefinition>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="Lisv" org.eventb.core.label="List_last_P" org.eventb.core.predicate="⊤" org.eventb.core.source="/List-gen/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(List(T)×List(T))" org.eventb.theory.core.wd="⊤">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/List-gen/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="λa⦂List(T)·a∈List(T) ∣ List_last(a)"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="Lisw" org.eventb.core.label="List_append" org.eventb.core.predicate="⊤" org.eventb.core.source="/List-gen/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="List(T)" org.eventb.theory.core.wd="⊤">
<org.eventb.theory.core.scOperatorArgument name="l" org.eventb.core.source="/List-gen/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="List(T)"/>
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/List-gen/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="T"/>
<org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/List-gen/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="l">
<org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="nil ⦂ List(T)" org.eventb.core.source="/List-gen/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="cons(a,nil ⦂ List(T))"/>
<org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="cons(e,xl)" org.eventb.core.source="/List-gen/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="List_append(List_append(xl,a),e)"/>
</org.eventb.theory.core.scRecursiveOperatorDefinition>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="Lisx" org.eventb.core.label="List_append_P" org.eventb.core.predicate="⊤" org.eventb.core.source="/List-gen/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(List(T)×T×List(T))" org.eventb.theory.core.wd="∀l⦂List(T),a⦂T·(l∈List(T)∧a∈T)∨¬l∈List(T)∨¬a∈T">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/List-gen/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="λl⦂List(T) ↦ a⦂T·l∈List(T)∧a∈T ∣ List_append(l,a)"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scProofRulesBlock name="generatedBlock" org.eventb.core.source="/List-gen/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#)">
<org.eventb.theory.core.scMetavariable name="a" org.eventb.core.source="/List-gen/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.core.type="List(T)"/>
<org.eventb.theory.core.scRewriteRule name="List.List_last case 0" org.eventb.core.accurate="true" org.eventb.core.label="List.List_last case 0" org.eventb.core.source="/List-gen/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="List_last expansion" org.eventb.theory.core.formula="List_last(nil ⦂ List(T))">
<org.eventb.theory.core.scRewriteRuleRHS name="List_last rhs" org.eventb.core.label="List_last rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/List-gen/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.formula="a"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="List.List_last case 1" org.eventb.core.accurate="true" org.eventb.core.label="List.List_last case 1" org.eventb.core.source="/List-gen/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="List_last expansion" org.eventb.theory.core.formula="List_last(cons(e,t))">
<org.eventb.theory.core.scRewriteRuleRHS name="List_last rhs" org.eventb.core.label="List_last rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/List-gen/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.formula="COND(t=(nil ⦂ List(T)),cons(e,nil ⦂ List(T)),List_last(t))"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scMetavariable name="e" org.eventb.core.source="/List-gen/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.core.type="T"/>
<org.eventb.theory.core.scMetavariable name="t" org.eventb.core.source="/List-gen/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.core.type="List(T)"/>
<org.eventb.theory.core.scRewriteRule name="List.List_last_P" org.eventb.core.accurate="true" org.eventb.core.label="List.List_last_P" org.eventb.core.source="/List-gen/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="List_last_P expansion" org.eventb.theory.core.formula="List_last_P ⦂ ℙ(List(T)×List(T))">
<org.eventb.theory.core.scRewriteRuleRHS name="List_last_P rhs" org.eventb.core.label="List_last_P rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/List-gen/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.formula="λa⦂List(T)·a∈List(T) ∣ List_last(a)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scMetavariable name="l" org.eventb.core.source="/List-gen/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#," org.eventb.core.type="List(T)"/>
<org.eventb.theory.core.scMetavariable name="a_" org.eventb.core.source="/List-gen/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#," org.eventb.core.type="T"/>
<org.eventb.theory.core.scRewriteRule name="List.List_append case 0" org.eventb.core.accurate="true" org.eventb.core.label="List.List_append case 0" org.eventb.core.source="/List-gen/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="List_append expansion" org.eventb.theory.core.formula="List_append(nil ⦂ List(T),a)">
<org.eventb.theory.core.scRewriteRuleRHS name="List_append rhs" org.eventb.core.label="List_append rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/List-gen/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.formula="cons(a,nil ⦂ List(T))"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="List.List_append case 1" org.eventb.core.accurate="true" org.eventb.core.label="List.List_append case 1" org.eventb.core.source="/List-gen/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="List_append expansion" org.eventb.theory.core.formula="List_append(cons(e,xl),a)">
<org.eventb.theory.core.scRewriteRuleRHS name="List_append rhs" org.eventb.core.label="List_append rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/List-gen/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.formula="List_append(List_append(xl,a),e)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scMetavariable name="xl" org.eventb.core.source="/List-gen/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#," org.eventb.core.type="List(T)"/>
<org.eventb.theory.core.scRewriteRule name="List.List_append_P" org.eventb.core.accurate="true" org.eventb.core.label="List.List_append_P" org.eventb.core.source="/List-gen/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="List_append_P expansion" org.eventb.theory.core.formula="List_append_P ⦂ ℙ(List(T)×T×List(T))">
<org.eventb.theory.core.scRewriteRuleRHS name="List_append_P rhs" org.eventb.core.label="List_append_P rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/List-gen/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.formula="λl⦂List(T) ↦ a⦂T·l∈List(T)∧a∈T ∣ List_append(l,a)"/>
</org.eventb.theory.core.scRewriteRule>
</org.eventb.theory.core.scProofRulesBlock>
<org.eventb.theory.core.scTheorem name="generatedBlocl" org.eventb.core.label="TypingTheorem last" org.eventb.core.predicate="∀a⦂List(T)·a∈List(T)⇒List_last(a)∈List(T)" org.eventb.core.source="/List-gen/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.theorem#+" org.eventb.theory.core.order="0"/>
<org.eventb.theory.core.scTheorem name="generatedBlocm" org.eventb.core.label="TypingTheorem append" org.eventb.core.predicate="∀l⦂List(T),a⦂T·l∈List(T)∧a∈T⇒List_append(l,a)∈List(T)" org.eventb.core.source="/List-gen/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.theorem#." org.eventb.theory.core.order="1"/>
</org.eventb.theory.core.scTheoryRoot>
