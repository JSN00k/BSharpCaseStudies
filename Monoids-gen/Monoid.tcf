<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.theory.core.scTheoryRoot org.eventb.core.accurate="true" org.eventb.core.configuration="org.eventb.theory.core.thy" org.eventb.core.source="/Monoids-gen/Monoid.tuf">
<org.eventb.theory.core.scImportTheoryProject name="'" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.importTheoryProject#'" org.eventb.theory.core.importTheoryProject="/Monoids-gen">
<org.eventb.theory.core.scImportTheory name="'" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.importTheoryProject#'|org.eventb.theory.core.importTheory#'" org.eventb.theory.core.importTheory="/Monoids-gen/Monoid0.dtf|org.eventb.theory.core.deployedTheoryRoot#Monoid0"/>
</org.eventb.theory.core.scImportTheoryProject>
<org.eventb.theory.core.scImportTheoryProject name="(" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.importTheoryProject#(" org.eventb.theory.core.importTheoryProject="/pNat-gen">
<org.eventb.theory.core.scImportTheory name="'" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.importTheoryProject#(|org.eventb.theory.core.importTheory#'" org.eventb.theory.core.importTheory="/pNat-gen/pNat0.dtf|org.eventb.theory.core.deployedTheoryRoot#pNat0"/>
</org.eventb.theory.core.scImportTheoryProject>
<org.eventb.theory.core.scTypeParameter name="T_EvB" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.typeParameter#)" org.eventb.core.type="ℙ(T_EvB)"/>
<org.eventb.theory.core.scNewOperatorDefinition name="T_EvC" org.eventb.core.label="Monoid_raiseToL" org.eventb.core.predicate="M∈Monoid(T)∧x∈T" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="T_EvB" org.eventb.theory.core.wd="⊤">
<org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T_EvB)"/>
<org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(T_EvB)×ℙ(T_EvB×T_EvB)×ℙ(T_EvB×T_EvB×T_EvB)×T_EvB"/>
<org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="T_EvB"/>
<org.eventb.theory.core.scOperatorArgument name="p" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scRecursiveOperatorDefinition name="+" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#+" org.eventb.theory.core.inductiveArgument="p">
<org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="zero ⦂ pNat" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#+|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="Monoid_ident(T,M)"/>
<org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="suc(ps)" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#+|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="Monoid_op(T,M)(x ↦ Monoid_raiseToL(T,M,x,ps))"/>
</org.eventb.theory.core.scRecursiveOperatorDefinition>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="T_EvD" org.eventb.core.label="Monoid_raiseToL_P" org.eventb.core.predicate="M∈Monoid(T)" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(T_EvB×pNat×T_EvB)" org.eventb.theory.core.wd="∀x⦂T_EvB,p⦂pNat·(x∈T∧p∈(pNat ⦂ ℙ(pNat)))∨¬x∈T∨¬p∈(pNat ⦂ ℙ(pNat))">
<org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T_EvB)"/>
<org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(T_EvB)×ℙ(T_EvB×T_EvB)×ℙ(T_EvB×T_EvB×T_EvB)×T_EvB"/>
<org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="λx⦂T_EvB ↦ p⦂pNat·x∈T∧p∈(pNat ⦂ ℙ(pNat)) ∣ Monoid_raiseToL(T,M,x,p)"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="T_EvE" org.eventb.core.label="Monoid_raiseToR" org.eventb.core.predicate="M∈Monoid(T)∧x∈T" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="T_EvB" org.eventb.theory.core.wd="⊤">
<org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T_EvB)"/>
<org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(T_EvB)×ℙ(T_EvB×T_EvB)×ℙ(T_EvB×T_EvB×T_EvB)×T_EvB"/>
<org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="T_EvB"/>
<org.eventb.theory.core.scOperatorArgument name="p" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scRecursiveOperatorDefinition name="+" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.recursiveOperatorDefinition#+" org.eventb.theory.core.inductiveArgument="p">
<org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="zero ⦂ pNat" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.recursiveOperatorDefinition#+|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="Monoid_ident(T,M)"/>
<org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="suc(ps)" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.recursiveOperatorDefinition#+|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="Monoid_op(T,M)(Monoid_raiseToR(T,M,x,ps) ↦ x)"/>
</org.eventb.theory.core.scRecursiveOperatorDefinition>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="T_EvF" org.eventb.core.label="Monoid_raiseToR_P" org.eventb.core.predicate="M∈Monoid(T)" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(T_EvB×pNat×T_EvB)" org.eventb.theory.core.wd="∀x⦂T_EvB,p⦂pNat·(x∈T∧p∈(pNat ⦂ ℙ(pNat)))∨¬x∈T∨¬p∈(pNat ⦂ ℙ(pNat))">
<org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T_EvB)"/>
<org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(T_EvB)×ℙ(T_EvB×T_EvB)×ℙ(T_EvB×T_EvB×T_EvB)×T_EvB"/>
<org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="λx⦂T_EvB ↦ p⦂pNat·x∈T∧p∈(pNat ⦂ ℙ(pNat)) ∣ Monoid_raiseToR(T,M,x,p)"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scProofRulesBlock name="generatedBlock" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#+">
<org.eventb.theory.core.scMetavariable name="T" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="ℙ(T_EvB)"/>
<org.eventb.theory.core.scMetavariable name="M" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="ℙ(T_EvB)×ℙ(T_EvB×T_EvB)×ℙ(T_EvB×T_EvB×T_EvB)×T_EvB"/>
<org.eventb.theory.core.scMetavariable name="x" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="T_EvB"/>
<org.eventb.theory.core.scMetavariable name="p" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scRewriteRule name="Monoid.Monoid_raiseToL case 0" org.eventb.core.accurate="true" org.eventb.core.label="Monoid.Monoid_raiseToL case 0" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="Monoid_raiseToL expansion" org.eventb.theory.core.formula="Monoid_raiseToL(T,M,x,zero ⦂ pNat)">
<org.eventb.theory.core.scRewriteRuleRHS name="Monoid_raiseToL rhs" org.eventb.core.label="Monoid_raiseToL rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.formula="Monoid_ident(T,M)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="Monoid.Monoid_raiseToL case 1" org.eventb.core.accurate="true" org.eventb.core.label="Monoid.Monoid_raiseToL case 1" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="Monoid_raiseToL expansion" org.eventb.theory.core.formula="Monoid_raiseToL(T,M,x,suc(ps))">
<org.eventb.theory.core.scRewriteRuleRHS name="Monoid_raiseToL rhs" org.eventb.core.label="Monoid_raiseToL rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.formula="Monoid_op(T,M)(x ↦ Monoid_raiseToL(T,M,x,ps))"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scMetavariable name="ps" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scRewriteRule name="Monoid.Monoid_raiseToL_P" org.eventb.core.accurate="true" org.eventb.core.label="Monoid.Monoid_raiseToL_P" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="Monoid_raiseToL_P expansion" org.eventb.theory.core.formula="Monoid_raiseToL_P(T,M)">
<org.eventb.theory.core.scRewriteRuleRHS name="Monoid_raiseToL_P rhs" org.eventb.core.label="Monoid_raiseToL_P rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.formula="λx⦂T_EvB ↦ p⦂pNat·x∈T∧p∈(pNat ⦂ ℙ(pNat)) ∣ Monoid_raiseToL(T,M,x,p)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="Monoid.Monoid_raiseToR case 0" org.eventb.core.accurate="true" org.eventb.core.label="Monoid.Monoid_raiseToR case 0" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="Monoid_raiseToR expansion" org.eventb.theory.core.formula="Monoid_raiseToR(T,M,x,zero ⦂ pNat)">
<org.eventb.theory.core.scRewriteRuleRHS name="Monoid_raiseToR rhs" org.eventb.core.label="Monoid_raiseToR rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.formula="Monoid_ident(T,M)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="Monoid.Monoid_raiseToR case 1" org.eventb.core.accurate="true" org.eventb.core.label="Monoid.Monoid_raiseToR case 1" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="Monoid_raiseToR expansion" org.eventb.theory.core.formula="Monoid_raiseToR(T,M,x,suc(ps))">
<org.eventb.theory.core.scRewriteRuleRHS name="Monoid_raiseToR rhs" org.eventb.core.label="Monoid_raiseToR rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.formula="Monoid_op(T,M)(Monoid_raiseToR(T,M,x,ps) ↦ x)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="Monoid.Monoid_raiseToR_P" org.eventb.core.accurate="true" org.eventb.core.label="Monoid.Monoid_raiseToR_P" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="Monoid_raiseToR_P expansion" org.eventb.theory.core.formula="Monoid_raiseToR_P(T,M)">
<org.eventb.theory.core.scRewriteRuleRHS name="Monoid_raiseToR_P rhs" org.eventb.core.label="Monoid_raiseToR_P rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.formula="λx⦂T_EvB ↦ p⦂pNat·x∈T∧p∈(pNat ⦂ ℙ(pNat)) ∣ Monoid_raiseToR(T,M,x,p)"/>
</org.eventb.theory.core.scRewriteRule>
</org.eventb.theory.core.scProofRulesBlock>
<org.eventb.theory.core.scTheorem name="generatedBlocl" org.eventb.core.label="TypingTheorem raiseToL" org.eventb.core.predicate="∀T⦂ℙ(T_EvB),equ⦂ℙ(T_EvB×T_EvB),op⦂ℙ(T_EvB×T_EvB×T_EvB),ident⦂T_EvB·T∈ℙ(T_EvB)∧T ↦ equ ↦ op ↦ ident∈Monoid(T)⇒(∀x⦂T_EvB,p⦂pNat·x∈T∧p∈(pNat ⦂ ℙ(pNat))⇒Monoid_raiseToL(T,T ↦ equ ↦ op ↦ ident,x,p)∈T)" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.theorem#," org.eventb.theory.core.order="0"/>
<org.eventb.theory.core.scTheorem name="generatedBlocm" org.eventb.core.label="TypingTheorem raiseToR" org.eventb.core.predicate="∀T⦂ℙ(T_EvB),equ⦂ℙ(T_EvB×T_EvB),op⦂ℙ(T_EvB×T_EvB×T_EvB),ident⦂T_EvB·T∈ℙ(T_EvB)∧T ↦ equ ↦ op ↦ ident∈Monoid(T)⇒(∀x⦂T_EvB,p⦂pNat·x∈T∧p∈(pNat ⦂ ℙ(pNat))⇒Monoid_raiseToR(T,T ↦ equ ↦ op ↦ ident,x,p)∈T)" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.theorem#\/" org.eventb.theory.core.order="1"/>
<org.eventb.theory.core.scTheorem name="generatedBlocn" org.eventb.core.label="RaiseToL Equiv Preservation:" org.eventb.core.predicate="∀T⦂ℙ(T_EvB),equ⦂ℙ(T_EvB×T_EvB),op⦂ℙ(T_EvB×T_EvB×T_EvB),ident⦂T_EvB·T∈ℙ(T_EvB)∧T ↦ equ ↦ op ↦ ident∈Monoid(T)⇒(∀x⦂T_EvB,y⦂T_EvB,p⦂pNat·x∈T∧y∈T∧p∈(pNat ⦂ ℙ(pNat))⇒(x ↦ y∈equ⇒Monoid_raiseToL(T,T ↦ equ ↦ op ↦ ident,x,p) ↦ Monoid_raiseToL(T,T ↦ equ ↦ op ↦ ident,y,p)∈equ))" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.theorem#0" org.eventb.theory.core.order="2"/>
<org.eventb.theory.core.scTheorem name="generatedBloco" org.eventb.core.label="RaiseToR Equiv Preservation:" org.eventb.core.predicate="∀T⦂ℙ(T_EvB),equ⦂ℙ(T_EvB×T_EvB),op⦂ℙ(T_EvB×T_EvB×T_EvB),ident⦂T_EvB·T∈ℙ(T_EvB)∧T ↦ equ ↦ op ↦ ident∈Monoid(T)⇒(∀x⦂T_EvB,y⦂T_EvB,p⦂pNat·x∈T∧y∈T∧p∈(pNat ⦂ ℙ(pNat))⇒(x ↦ y∈equ⇒Monoid_raiseToR(T,T ↦ equ ↦ op ↦ ident,x,p) ↦ Monoid_raiseToR(T,T ↦ equ ↦ op ↦ ident,y,p)∈equ))" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.theorem#1" org.eventb.theory.core.order="3"/>
<org.eventb.theory.core.scTheorem name="generatedBlocp" org.eventb.core.label="RaiseToL addRule:" org.eventb.core.predicate="∀T⦂ℙ(T_EvB),equ⦂ℙ(T_EvB×T_EvB),op⦂ℙ(T_EvB×T_EvB×T_EvB),ident⦂T_EvB·T∈ℙ(T_EvB)∧T ↦ equ ↦ op ↦ ident∈Monoid(T)⇒(∀x⦂T_EvB,p⦂pNat,q⦂pNat·x∈T∧p∈(pNat ⦂ ℙ(pNat))∧q∈(pNat ⦂ ℙ(pNat))⇒op(Monoid_raiseToL(T,T ↦ equ ↦ op ↦ ident,x,p) ↦ Monoid_raiseToL(T,T ↦ equ ↦ op ↦ ident,x,q)) ↦ Monoid_raiseToL(T,T ↦ equ ↦ op ↦ ident,x,p pNat_add q)∈equ)" org.eventb.core.source="/Monoids-gen/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.theorem#2" org.eventb.theory.core.order="4"/>
</org.eventb.theory.core.scTheoryRoot>
