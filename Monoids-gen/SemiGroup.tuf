<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.theory.core.theoryRoot org.eventb.core.configuration="org.eventb.theory.core.thy">
<org.eventb.theory.core.importTheoryProject name="'" org.eventb.theory.core.importTheoryProject="/Operators-gen">
<org.eventb.theory.core.importTheory name="'" org.eventb.theory.core.importTheory="/Operators-gen/Operators.dtf|org.eventb.theory.core.deployedTheoryRoot#Operators"/>
</org.eventb.theory.core.importTheoryProject>
<org.eventb.theory.core.newOperatorDefinition name="(" org.eventb.core.label="SemiGroup" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="ℙ(T_EvB)" org.eventb.core.identifier="T"/>
<org.eventb.theory.core.directOperatorDefinition name="(" org.eventb.theory.core.formula="{ SG ↦ op ∣ SG ∈ Setoid(T) ∧ op ∈ AssocOp(T, SG)}"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.typeParameter name=")" org.eventb.core.identifier="T_EvB"/>
<org.eventb.theory.core.newOperatorDefinition name="*" org.eventb.core.label="SemiGroup_equ" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="ℙ(T_EvB)" org.eventb.core.identifier="T"/>
<org.eventb.theory.core.operatorArgument name="(" org.eventb.core.expression="SemiGroup(T)" org.eventb.core.identifier="SG"/>
<org.eventb.theory.core.directOperatorDefinition name=")" org.eventb.theory.core.formula="prj2(prj1(SG))"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.newOperatorDefinition name="+" org.eventb.core.label="SemiGroup_op" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="ℙ(T_EvB)" org.eventb.core.identifier="T"/>
<org.eventb.theory.core.operatorArgument name="(" org.eventb.core.expression="SemiGroup(T)" org.eventb.core.identifier="SG"/>
<org.eventb.theory.core.directOperatorDefinition name=")" org.eventb.theory.core.formula="prj2(SG)"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.theorem name="," org.eventb.core.label="2 left ident no right:" org.eventb.core.predicate="∀T, equ, op·T ∈ ℙ(T_EvB) ∧ T ↦ equ ↦ op ∈ SemiGroup(T) ⇒ (∀l1, l2·l1 ∈ T ∧ l2 ∈ T ⇒ ((((∀x·x ∈ T ⇒ (op(l1 ↦ x) ↦ x)∈equ) ∧ (∀y·y ∈ T ⇒ (op(l2 ↦ y) ↦ y)∈equ)) ∧ ¬((l1 ↦ l2)∈equ)) ⇒ ¬(∃r·r ∈ T ∧ (∀z·z ∈ T ⇒ (op(z ↦ r) ↦ z)∈equ))))"/>
<org.eventb.theory.core.theorem name="-" org.eventb.core.label="2 right ident no left:" org.eventb.core.predicate="∀T, equ, op·T ∈ ℙ(T_EvB) ∧ T ↦ equ ↦ op ∈ SemiGroup(T) ⇒ (∀r1, r2·r1 ∈ T ∧ r2 ∈ T ⇒ ((((∀x·x ∈ T ⇒ (op(x ↦ r1) ↦ x)∈equ) ∧ (∀y·y ∈ T ⇒ (op(y ↦ r2) ↦ y)∈equ)) ∧ ¬((r1 ↦ r2)∈equ)) ⇒ ¬(∃l·l ∈ T ∧ (∀z·z ∈ T ⇒ (op(l ↦ z) ↦ z)∈equ))))"/>
<org.eventb.theory.core.theorem name="." org.eventb.core.label="left right ident is unique1:" org.eventb.core.predicate="∀T, equ, op·T ∈ ℙ(T_EvB) ∧ T ↦ equ ↦ op ∈ SemiGroup(T) ⇒ (∀LRident, Rident·LRident ∈ T ∧ Rident ∈ T ⇒ ((∀x·x ∈ T ⇒ ((((op(LRident ↦ x) ↦ x)∈equ) ∧ ((op(x ↦ LRident) ↦ x)∈equ)) ∧ (∀y·y ∈ T ⇒ (op(y ↦ Rident) ↦ y)∈equ))) ⇒ ((LRident ↦ Rident)∈equ)))"/>
<org.eventb.theory.core.theorem name="/" org.eventb.core.label="left right ident is unique2:" org.eventb.core.predicate="∀T, equ, op·T ∈ ℙ(T_EvB) ∧ T ↦ equ ↦ op ∈ SemiGroup(T) ⇒ (∀LRident, Lident·LRident ∈ T ∧ Lident ∈ T ⇒ ((∀x·x ∈ T ⇒ ((((op(LRident ↦ x) ↦ x)∈equ) ∧ ((op(x ↦ LRident) ↦ x)∈equ)) ∧ (∀y·y ∈ T ⇒ (op(Lident ↦ y) ↦ y)∈equ))) ⇒ ((Lident ↦ LRident)∈equ)))"/>
<org.eventb.theory.core.theorem name="0" org.eventb.core.label="left right ident is unique:" org.eventb.core.predicate="∀T, equ, op·T ∈ ℙ(T_EvB) ∧ T ↦ equ ↦ op ∈ SemiGroup(T) ⇒ (∀LRident, LorRident·LRident ∈ T ∧ LorRident ∈ T ⇒ ((∀x·x ∈ T ⇒ ((((op(LRident ↦ x) ↦ x)∈equ) ∧ ((op(x ↦ LRident) ↦ x)∈equ)) ∧ ((∀y·y ∈ T ⇒ (op(LorRident ↦ y) ↦ y)∈equ) ∨ (∀z·z ∈ T ⇒ (op(z ↦ LorRident) ↦ z)∈equ)))) ⇒ ((LorRident ↦ LRident)∈equ)))"/>
</org.eventb.theory.core.theoryRoot>
